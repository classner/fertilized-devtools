## Author: Christoph Lassner.
{% include "cpp_disclaimer.jinja" %}


#if defined SERIALIZATION_ENABLED
#include "fertilized/global.h"

#include <boost/archive/text_oarchive.hpp>
#include <boost/archive/text_iarchive.hpp>

#include "fertilized/serialization/serialization.h"

namespace fertilized {
  // Forward declarations.
@ for tplid in tplids
    template <typename T>
    void __serialization_register_{{tplid}}(T &,
      const bool &always_register,
      const unsigned int &serialization_library_version);
@ endfor

  /**
   * \brief Template helper function for all archive types to register
   * derived classes with boost serialization.
   */
  template <class Archive>
  void register_fertilized_objects_(Archive &ar,
                                    const bool &always_register,
                                    const unsigned int &serialization_library_version) {
@ for tplid in tplids
    __serialization_register_{{tplid}}(ar,
        always_register,
        serialization_library_version);
@ endfor
  };

  TemplateFuncExport DllExport void register_fertilized_objects_(
    boost::archive::text_iarchive &ar, const
    bool &always_register,
    const unsigned int &serialization_library_version);

  TemplateFuncExport DllExport void register_fertilized_objects_(
    boost::archive::text_oarchive &ar,
    const bool &always_register,
    const unsigned int &serialization_library_version);

}  // namespace fertilized
#endif  // SERIALIZATION_ENABLED
