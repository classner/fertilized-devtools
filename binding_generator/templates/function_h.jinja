## Author: Christoph Lassner.
{% include 'cpp_disclaimer.jinja' %}
{% import 'cpptools.jinja' as cpptools %}

#ifndef MATFERTILIZED_MATLAB_HEADERS___FUNCTIONS_{{ package|upper }}_H_
#define MATFERTILIZED_MATLAB_HEADERS___FUNCTIONS_{{ package|upper }}_H_

#include "global.h"
#include "mex.h"

#ifdef __cplusplus
extern "C"
{
#endif
@ for m in functions
@   if 'Matlab' in m.AvailableIn
    ## Create methods of form: DllExport ReturnType MethodName(Arguments);
@     if m.SupportedTypes is none or m.SupportedTypes | length == 0
        ## generate a no argument method!
  {{ export_macro }} {{ m.ReturnType.getCType(is_return_type=True) }} {{ m.NameFormat|format(m.FunctionPrefix, "") }} ({{ cpptools.render_arguments(m, render_defaults=False, as_c_types=True) }});
@     else
@       for t in m.SupportedTypes   
@         set suffix = "_" + t.TypesString
          ## generate a no argument method!
  {{ export_macro }} {{ m.ReturnType.getCType(is_return_type=True) }} {{ m.NameFormat|format("", suffix) }} ({{ cpptools.render_arguments(m, render_defaults=False, as_c_types=True) }});
@       endfor
@     endif
@   endif
@ endfor

#ifdef __cplusplus
}
#endif 

#endif  // MATFERTILIZED_MATLAB_HEADERS___FUNCTIONS_{{ package|upper }}_H_
